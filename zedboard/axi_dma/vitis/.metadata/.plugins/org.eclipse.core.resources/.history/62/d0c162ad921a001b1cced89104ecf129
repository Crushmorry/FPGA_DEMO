#include "xparameters.h"
#include "xaxidma.h"
#include "xscugic.h"
#include "xil_exception.h"

#define DMA_DEVICE_ID XPAR_AXIDMA_0_DEVICE_ID
#define RX_INTR_ID XPAR_FABRIC_AXIDMA_0_S2MM_INTROUT_VEC_ID
#define TX_INTR_ID XPAR_FABRIC_AXIDMA_0_MM2S_INTROUT_VEC_ID
#define SCUGIC_DEVICE_ID XPAR_PS7_SCUGIC_0_DEVICE_ID

void rx_intr_handler(void * callbakRef);
void tx_intr_handler(void * callbakRef);
int main()
{
	XAxiDma axidma;
	XAxiDma_Config *axidma_cfg;
	Xaxidma_cfg = AxiDma_LookupConfig(DMA_DEVICE_ID);
	XAxiDma_CfgInitialize(&axidma, axidma_cfg);

	XScuGic intc;
	XScuGic_Config *intc_cfg;
	intc_cfg = XScuGic_LookupConfig(SCUGIC_DEVICE_ID);\
	XScuGic_CfgInitialize(&intc, intc_cfg, intc_cfg->CpuBaseAddress);

	Xil_ExceptionInit();
	Xil_ExceptionRegisterHandler(XIL_EXCEPTION_ID_INT, (Xil_ExceptionHandler)XScuGic_InterruptHandler, &intc);
	Xil_ExceptionEnable();
	XScuGic_SetPriorityTriggerType(&intc, RX_INTR_ID, 0xA3, 0x3);
	XScuGic_SetPriorityTriggerType(&intc, TX_INTR_ID, 0xA3, 0x3);
	XScuGic_Connect(&intc, RX_INTR_ID, rx_intr_handler, &axidma);
	XScuGic_Connect(&intc, TX_INTR_ID, tx_intr_handler, &axidma);
	XScuGic_Enable(&intc, RX_INTR_ID);
	XScuGic_Enable(&intc, TX_INTR_ID);

	XAxiDma_IntrEnable(&axidma,XAXIDMA_IRQ_ALL_MASK,XAXIDMA_DMA_TO_DEVICE);
	XAxiDma_IntrEnable(&axidma,XAXIDMA_IRQ_ALL_MASK,XAXIDMA_DEVICE_TO_DMA);


	return 0;
}
